<tool id="plott" name="Plotting tool for Multiple datasets" version="0.0.0">
  <description>Plots different graph types, e.g. line, error bars, points, etc on the same graph using multiple datasets</description>
  <command interpreter="bash">python.sh /global/project/projectdirs/hacc/PDACS/galaxy_dev_ravi/tools/plotting/test_script.py</command>
  <!--command interpreter="Python">python test_script.py</command-->

  <inputs>
    <param name="main" type="text" value="" size="30" label="Plot Title"/>
    <param name="xlab" type="text" value="" size="30" label="Label for x axis"/>
    <param name="ylab" type="text" value="" size="30" label="Label for y axis"/>
    <repeat name="series" title="Dataset">
       <param name="f_type" type="select" label="Format Type">
          <option value="cM" selected="true">cM Tool (and similar)</option>
          <option value="kpk">Cosmic Emu (and similar such as Power Spectrum)</option>
          <option value="db">Others (such as Mass Functions)</option>
       </param>
         <param name="input" type="data" format="db" label="File Name"/>
         <param name="table_name" type="text" label="Tables in the database">
         </param>
         <param name="xcol" type="select" data_ref="input" label="Column for x axis">
 	  <options>
           <filter type="data_meta" ref="input" key="column_names" value="num_clusters"/>
          </options>
         </param>
        <param name="ycol" type="select" data_ref="input" label="Column for y axis">
          <options>
            <filter type="data_meta" ref="input" key="column_names"/>
          </options>
        </param>
       <param name="delta" type="select" label="+/- Delta for y axis">
          <option value="plus" selected="true">+ Delta</option>
          <option value="minus" selected="false">- Delta</option>
       </param>
       <param name="error_type" type="select" label="Error Type">
          <option value="abs" selected="true">Absolute</option>
          <option value="frac" selected="false">Fractional</option>
       </param>
       <param name="transform_x" type="select" label="Transform(x)">
          <option value="logX" selected="true">Log</option>
          <option value="expX" selected="false">Exp</option>
       </param>
       <param name="transform_y" type="select" label="Transform(y)">
          <option value="logY" selected="true">Log</option>
          <option value="expY" selected="false">Exp</option>
       </param>
       <param name="series_type" type="select" label="Plot Type">
          <option value="line" selected="true">Line</option>
          <option value="points">Points</option>
          <option value="errorbar">Error Bars</option>
       </param>
    </repeat>       
  </inputs>

  <configfiles>
    <configfile name="script_file">
import sqlite3 as lite
con1 = lite.connect("/global/project/projectdirs/hacc/PDACS/working/interim.db")
cur1 = con1.cursor()
cur1.execute("drop table if exists forplot")
cur1.execute("create table forplot(x_col NUMERIC, y_col NUMERIC)")
#for $i, $s in enumerate( $series )
##if ${s.format_type}=="cM":
con = lite.connect("${s.input.file_name}")
##if ${s.format_type}=="kpk":
##  con = lite.connect("${s.kpk_input.file_name}")
##if ${s.format_type}=="db":
##  con = lite.connect("${s.db_input.file_name}")
cur = con.cursor()
cur.execute("select ${s.xcol} from ${s.table_name}")
x${i}=cur.fetchall()
cur.execute("select ${s.ycol} from ${s.table_name}")
y${i} = cur.fetchall()
for d,e in zip(x${i}, y${i}):
   print d, e
print "Table 1 done and added to combined file"
for a, b in zip(x${i}, y${i}):
  tuples = (a, b)
  cur1.execute("insert into forplot values(?,?)", tuples)
#end for
cur1.commit()
    </configfile>
  </configfiles>

  <outputs>
    <data format="pdf" name="output" />
  </outputs>

<help>
</help>
</tool>

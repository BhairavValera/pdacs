<tool id="globus_upload" name="GO Upload">
  <description>Perform a globus online transfer.</description>
  <command interpreter="python">
    go_upload.py
    $username
    -k $userkey
    -c $usercert
    -C $globuscert
    -o $out_file1
    --source-ep=$from_endpoint
    --source-path=$from_path
    --destination-ep=$to_endpoint
    --destination-path=$to_path
    --deadline=$deadline
  </command>
  <inputs>
    <param name="username" type="text" size="100" label="Globus Username"/>
    <param name="userkey" type="text" size="100" label="Globus User Key"/>
    <param name="usercert" type="text" size="100" label="Globus User Certificate"/>
    <param name="globuscert" type="text" size="100" label="Globus Certificate"/>
    <param name="from_endpoint" type="text" size="100" label="Source Endpoint">
      <sanitizer sanitize="False"/>
    </param>
    <param name="from_path" type="text" size="100" label="Source Path">
      <sanitizer sanitize="False"/>
    </param>
    <param name="to_endpoint" type="text" size="100" label="Destination Endpoint">
      <sanitizer sanitize="False"/>
    </param>
    <param name="to_path" type="text" size="100" label="Destination Path">
      <sanitizer sanitize="False"/>
    </param>
    <param name="deadline" type="text" size="10" label="Deadline (In minutes)"/>
  </inputs>
  <outputs>
    <data name="out_file1" type="data"/>
  </outputs>
  <tests>
    <test>
      <!-- TODO: UPDATE TEST CASE -->
      <param name="namefield" value="Bob"/>
      <output name="out_file1" file="helloworld_out.txt"/>
    </test>
  </tests>
  <help>
.. class:: warningmark
    
  **WARNING:** Be careful not to exceed disk quotas!
    
-----
    
**What it does**
    
  Transfers data between globus endpoints.
    
-----
    
**Example**
    
  Specify your certs, your endpoints, and some paths within those endpoints.

  </help>
</tool>
